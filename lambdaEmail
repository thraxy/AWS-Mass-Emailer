
import json
import boto3

topic_arn = "arn:aws:sns:us-east-1:992419660637:snstesting"
def send_sns(SNSmessage, SNSsubject):
    try:
        client = boto3.client("sns")
        result1 = client.publish(TopicArn=topic_arn, Message=SNSmessage, Subject=SNSsubject)
        if result1['ResponseMetadata']['HTTPStatusCode'] == 200:
            print(result1)
            print("Notification send successfully..!!!")
            return True
    except Exception as e:
        print("Error occured while publish notifications and error is : ", e)
        return True

def lambda_handler(event, context):
    # SES
    file_name = event['Records'][0]['s3']['object']['key']
    bucketName=event['Records'][0]['s3']['bucket']['name']
    print("Event details : ",event)
    print("File Name : ",file_name)
    print("Bucket Name : ",bucketName)
    subject = 'AWS Cloud Project SES Event from ' + bucketName
    client = boto3.client("ses")
    body = """
                 <br>
                 This is a notification mail to inform you about a s3 event.
                 The file {} is inserted in the {} bucket .
         """.format(file_name, bucketName)
    message = {"Subject": {"Data": subject}, "Body": {"Html": {"Data": body}}}
    response = client.send_email(Source = "mna73@scarletmail.rutgers.edu", Destination = {"ToAddresses": ["mna73@scarletmail.rutgers.edu"]}, Message = message) 
    print("The mail is sent successfully")
    
    # SNS
    print("event collected is {}".format(event))
    for record in event['Records'] :
        s3_bucket = record['s3']['bucket']['name']
        print("Bucket name is {}".format(s3_bucket))
        s3_key = record['s3']['object']['key']
        print("Bucket key name is {}".format(s3_key))
        from_path = "s3://{}/{}".format(s3_bucket, s3_key)
        print("from path {}".format(from_path))
        SNSmessage = "The file is uploaded at S3 bucket path {}".format(from_path)
        SNSsubject = "AWS Cloud Project SNS "
        SNSResult = send_sns(SNSmessage, SNSsubject)
        if SNSResult :
            print("Notification Sent..") 
            return SNSResult
        else:
            return False
    
